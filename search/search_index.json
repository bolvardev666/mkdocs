{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to MkDocs","text":"<p>For full documentation visit mkdocs.org.</p>"},{"location":"#commands","title":"Commands","text":"<ul> <li><code>mkdocs new [dir-name]</code> - Create a new project.</li> <li><code>mkdocs serve</code> - Start the live-reloading docs server.</li> <li><code>mkdocs build</code> - Build the documentation site.</li> <li><code>mkdocs -h</code> - Print help message and exit.</li> </ul>"},{"location":"#project-layout","title":"Project layout","text":"<pre><code>mkdocs.yml    # The configuration file.\ndocs/\n    index.md  # The documentation homepage.\n    ...       # Other markdown pages, images and other files.\n</code></pre>"},{"location":"mkdocs/","title":"About Mkdocs","text":""},{"location":"mkdocs/#manager","title":"Manager","text":"<ul> <li><code>mkdocs new [dir-name]</code> - Create a new project.</li> <li><code>mkdocs serve</code> - Start the live-reloading docs server.</li> <li><code>mkdocs build</code> - Build the documentation site.</li> <li><code>mkdocs -h</code> - Print help message and exit.</li> </ul>"},{"location":"mkdocs/#setting-themes","title":"Setting Themes","text":"<pre><code>project\n    docs\n    mkdocs.yml # the are the configuration file\n</code></pre>"},{"location":"mkdocs/#mkdocsyml","title":"mkdocs.yml","text":"<pre><code>site_name: title\ntheme:\n  name: material\nnav:\n  ...\n</code></pre>"},{"location":"python/rom%E9%80%89%E6%8B%A9/","title":"orm\u9009\u62e9","text":"ORM\u6846\u67b6 \u5f02\u6b65\u652f\u6301 \u6570\u636e\u5e93\u652f\u6301 \u4f18\u70b9 \u7f3a\u70b9 Tortoise-ORM \u4ec5\u5f02\u6b65 ALL \u7b80\u5355 \u4e0d\u652f\u6301\u590d\u6742\u5185\u5bb9 GINO \u4ec5\u5f02\u6b65 ALL \u5feb \u6709\u70b9\u96be"},{"location":"python/fastapi/model/","title":"\u6570\u636e\u5e93ORM\u6a21\u578b","text":"<pre><code>from tortoise import models\nfrom tortoise.fields import IntField,CharField\n\n\nclass User(models.Model):\n    id = IntField(pk=True,autoincrement=True)\n    username = CharField(max_length=50)\n    password = CharField(max_length=256)\n    email = CharField(max_length=50)\n    account = CharField(max_length=50, unique=True)\n    sex = CharField(max_length=10, default='\u672a\u77e5')\n\n    class Meta:\n        table = 'user'      #\u8868\u540d\n</code></pre>"},{"location":"python/fastapi/orm/","title":"tortoise-orm \u6846\u67b6","text":"<p>tortoise-orm\u662f\u4e00\u4e2apython <code>orm</code>\u5f02\u6b65\u6846\u67b6,\u4f7f\u7528\u7b80\u5355,\u914d\u7f6e\u7a0d\u5fae\u6709\u4e9b\u9ebb\u70e6\u4e4b\u5916\u6ca1\u4ec0\u4e48\u7f3a\u70b9</p>"},{"location":"python/fastapi/orm/#1-fastapi","title":"1. \u5728fastapi\u4e2d\u7684\u914d\u7f6e","text":"<pre><code>TORTOISE_ORM_CONFIG = {\n    'connections': {\n        # Dict format for connection\n        'default': {\n            'engine': 'tortoise.backends.asyncpg',\n            'credentials': {\n                'host': '127.0.0.1',\n                'port': '5432',\n                'user': 'bolvar',\n                'password': '123.edu',\n                'database': 'fastapi',\n            }\n        },\n        # Using a DB_URL string\n        # 'default': 'postgres://postgres:qwerty123@localhost:5432/events'\n    },\n    'apps': {\n        'models': {\n            'models': [\"app.models.user_model\"],\n            # If no default_connection specified, defaults to 'default'\n            'default_connection': 'default',\n        }\n    },\n    \"timezone\": \"Asia/Shanghai\",\n}\n</code></pre> <p><code>models</code>\u53c2\u6570\u9700\u8981\u5199\u5230model\u65b9\u6cd5\u6240\u5728\u7684\u5177\u4f53py\u6587\u4ef6,\u6bd4\u5982\u6211\u7684py\u6a21\u578b\u6587\u4ef6\u662f<code>user_model.py</code></p>"},{"location":"python/fastapi/orm/#2","title":"2.\u670d\u52a1\u6ce8\u518c","text":"<p>\u5728main.py\u6587\u4ef6\u7684\u7684app\u4e2d\u6ce8\u518c,\u4f7f\u7528<code>register_tortoise</code>\u65b9\u6cd5,\u6ce8\u518c\u540e\u65e0\u9700\u624b\u52a8\u7ba1\u7406 <pre><code>from tortoise.contrib.fastapi import register_tortoise\n\nregister_tortoise(\n    app,\n    config=TORTOISE_ORM_CONFIG,\n    generate_schemas=True,  # auto create table ,only devel env using\n    add_exception_handlers=True\n)\n</code></pre></p>"},{"location":"python/fastapi/pydantic/","title":"pydantic","text":""},{"location":"python/fastapi/pydantic/#pydantic_1","title":"pydantic\u6570\u636e\u6a21\u578b","text":"<p>\u5141\u8bb8\u5728\u4f7f\u7528fastapi\u8def\u7531\u63a5\u6536\u53c2\u6570\u65f6\u6839\u636e\u6570\u636e\u6a21\u578b\u7684\u9650\u5236\u8fdb\u884c\u63a5\u6536,\u5f88\u68d2 <pre><code>from pydantic import BaseModel,constr\n\n\nclass ChangeUserPassword(User):\n    old_password: str\n    new_password: constr(min_length=6, max_length=256)\n\nclass UserPaging(BaseModel):\n    page: int = 1\n    limit: int = 50\n    order: str = \"id\"\n    sort: str = \"desc\"\n</code></pre></p>"},{"location":"python/fastapi/pydantic/#orm-pydantic","title":"orm-pydantic\u6269\u5c55","text":"<p>\u4f7f\u7528model\u76f4\u63a5\u751f\u6210\u5bf9\u5e94\u7684<code>pydantic</code>\u6570\u636e\u6a21\u578b,<code>exclud</code>\u53c2\u6570\u5141\u8bb8\u751f\u6210\u65f6\u6392\u9664\u67d0\u4e9b\u5b57\u6bb5 <pre><code>from tortoise.contrib.pydantic import pydantic_model_creator\n\nUserAll = pydantic_model_creator(user_model.User,name=\"UserAll\",exclude=(\"id\",))\n</code></pre></p>"},{"location":"python/fastapi/route/","title":"\u8def\u7531","text":"<pre><code>from fastapi import APIRouter\n\n\nroute = APIRouter()\n\n@route.post(\"/add_user\", tags=[\"user\"])\nasync def add_user(user_obj: UserAll):               #UserAll\u5bf9\u8c61\u6765\u81ea\u6570\u636e\u6a21\u578b\n    result = await user_service.add_user(user_obj)  #\u5177\u4f53\u4e1a\u52a1\u5b9e\u73b0\n    return {\"message\": result}\n</code></pre>"}]}